---

- name: Nginx | Create a directory certificates
  file:
    path: /etc/pki/nginx/
    state: directory
    owner: nginx
    group: nginx
    mode: '0750'

- name: Nginx | Get all local certificates
  shell: "ls {{ path_certificate }}"
  register: dir_certificates
  delegate_to: localhost

#- name: Nginx | Copy all certificates
#  copy:
#    src: "{{ path_certificate }}/{{ item }}"
#    dest: /etc/pki/nginx/
#    owner: nginx
#    group: nginx
#    mode: '0600'
#  with_items: "{{ dir_certificates.stdout_lines }}"

- name: Nginx | Copy basic config
  template:
    src: nginx/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: Restart service Nginx

- debug:
    msg: "dict: {{ servers[item] }}"
  with_items: "{{ servers.keys() }}"

- debug:
    msg: "/etc/nginx/conf.d/{{ servers[item].name }}.{{ servers[item].port }}.conf"
  with_items: "{{ servers }}"

- name: Nginx | Copy config websites reverse proxy
  template:
    src: templates/nginx/conf.d/webconf.conf.j2
    dest: "/etc/nginx/conf.d/{{ servers[item].name }}.{{ servers[item].port }}.conf"
    owner: nginx
    group: nginx
    mode: '0640'
  with_items:
    - "{{ servers.keys() }}"
  notify: Restart service Nginx

- name: Nginx | Remove webconfig nginx servers without web
  file:
    path: "/etc/nginx/conf.d/{{ servers[item].name }}.{{ servers[item].port }}.conf"
    state: absent
  with_items:
    - nginx
    - dns

