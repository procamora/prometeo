input {
  # filebeats
  beats {
    port => 5044
    #type => "cowrie"
  }
}

filter {
  if [type] == "cowrie" {
    json {
      source => message
    }

    date {
      match => [ "timestamp", "ISO8601" ]
    }

    if [src_ip]  {
      mutate {
        add_field => { "src_host" => "%{src_ip}" }
      }

      dns {
        reverse => [ "src_host" ]
        nameserver => [ "8.8.8.8", "8.8.4.4" ]
        action => "replace"
        hit_cache_size => 4096
        hit_cache_ttl => 900
        failed_cache_size => 512
        failed_cache_ttl => 900
      }

      geoip {
        source => "src_ip"
        target => "geoip"
        #/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-filter-geoip-6.0.5-java/vendor/GeoLite2-City.mmdb
        #/opt/splunk/share/GeoLite2-City.mmdb
        database => "/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-filter-geoip-6.0.5-java/vendor/GeoLite2-City.mmdb"
      }
    }

    mutate {
      # cut out useless tags/fields
      remove_tag => [ "beats_input_codec_plain_applied"]
      remove_field => [ "[log][file][path]", "[log][offset]" ]
      }
  }
}

output {
  stdout {
    #codec => rubydebug
  }
  if [type] == "cowrie" {
    http {
      http_method => "post"
      url => "http://127.0.0.1:8088/services/collector"
      headers => ['Authorization', 'Splunk {{ splunk_token }}']
      connect_timeout => 30
      request_timeout => 30
      socket_timeout => 30
      retry_non_idempotent => true
      format => "json"
      retry_failed => true
      automatic_retries => 2
      mapping => {
        "event" => {
          "message" => "%{message}"
          "log" => "%{log}"
          "prospector" => "%{prospector}"
          "beat" => "%{beat}"
          "fields" => "%{fields}"
          "tags" => "%{tags}"
          "input" => "%{input}"
          "host" => "%{host}"
          "meta" => "%{meta}"
        }
      }
    }
  }
}
